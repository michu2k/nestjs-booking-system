generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "./"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int    @id @default(autoincrement())
  userId            Int
  provider          String
  providerAccountId String
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  phone        String?
  role         UserRole
  refreshToken String?
  accounts     Account[]
  Booking      Booking[]
}

model Booking {
  id        Int           @id @default(autoincrement())
  from      DateTime
  to        DateTime
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now())
  status    BookingStatus
  userId    Int
  serviceId Int
  service   Service       @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Service {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  price           Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  status          ServiceStatus     @default(ACTIVE)
  locationId      Int?
  Booking         Booking[]
  location        Location?         @relation(fields: [locationId], references: [id])
  ServiceSchedule ServiceSchedule[]
}

model ServiceSchedule {
  id        Int     @id @default(autoincrement())
  day       Int
  startTime String
  endTime   String
  serviceId Int
  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@unique([serviceId, day])
}

model Location {
  id      Int       @id @default(autoincrement())
  city    String
  address String
  country String
  lat     Float?
  lng     Float?
  Service Service[]
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}

enum BookingStatus {
  CONFIRMED
  PENDING
  CANCELLED
}

enum ServiceStatus {
  ACTIVE
  INACTIVE
  UNAVAILABLE
  DRAFT
  ARCHIVED
}
